name: MATLAB Build
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
      # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
env:
  MLM_LICENSE_TOKEN: ${{ secrets.MLM_LICENSE_TOKEN }}
   
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on:  ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      # Sets up MATLAB on the GitHub Actions runner
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          cache: true
          products: |
            MATLAB
            Deep_Learning_Toolbox
            MATLAB_Coder
            MATLAB_Report_Generator

      # You can use "run-command" to execute custom MATLAB scripts, functions, or statements. In this case, use it to run the command "modelUpdate"
      - name: Train network
        uses: matlab-actions/run-command@v2
        with:
            command: "openProject('Example-Raspberry-PI.prj');modelUpdate"

      - name: Copy new learnables to Raspberry Pi
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: learnablesValue.coderdata
          target: /home/wyu/Jupyter/demo
          
